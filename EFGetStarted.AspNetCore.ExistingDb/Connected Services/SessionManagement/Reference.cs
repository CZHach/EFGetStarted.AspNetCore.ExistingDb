//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SessionManagement
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationInfo", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class AuthenticationInfo : object
    {
        
        private string AuthCodeField;
        
        private string PasswordField;
        
        private string UserKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthCode
        {
            get
            {
                return this.AuthCodeField;
            }
            set
            {
                this.AuthCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserKey
        {
            get
            {
                return this.UserKeyField;
            }
            set
            {
                this.UserKeyField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Folder", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V42.Soa" +
        "p")]
    public partial class Folder : object
    {
        
        private bool AllowPublicNotesField;
        
        private bool AllowSessionDownloadField;
        
        private string AudioPodcastITunesUrlField;
        
        private string AudioRssUrlField;
        
        private System.Guid[] ChildFoldersField;
        
        private string DescriptionField;
        
        private bool EnablePodcastField;
        
        private string ExternalIdField;
        
        private System.Guid IdField;
        
        private bool IsPublicField;
        
        private string ListUrlField;
        
        private string NameField;
        
        private System.Nullable<System.Guid> ParentFolderField;
        
        private string[] PresentersField;
        
        private System.Guid[] SessionsField;
        
        private string SettingsUrlField;
        
        private string VideoPodcastITunesUrlField;
        
        private string VideoRssUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPublicNotes
        {
            get
            {
                return this.AllowPublicNotesField;
            }
            set
            {
                this.AllowPublicNotesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSessionDownload
        {
            get
            {
                return this.AllowSessionDownloadField;
            }
            set
            {
                this.AllowSessionDownloadField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AudioPodcastITunesUrl
        {
            get
            {
                return this.AudioPodcastITunesUrlField;
            }
            set
            {
                this.AudioPodcastITunesUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AudioRssUrl
        {
            get
            {
                return this.AudioRssUrlField;
            }
            set
            {
                this.AudioRssUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] ChildFolders
        {
            get
            {
                return this.ChildFoldersField;
            }
            set
            {
                this.ChildFoldersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePodcast
        {
            get
            {
                return this.EnablePodcastField;
            }
            set
            {
                this.EnablePodcastField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId
        {
            get
            {
                return this.ExternalIdField;
            }
            set
            {
                this.ExternalIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic
        {
            get
            {
                return this.IsPublicField;
            }
            set
            {
                this.IsPublicField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListUrl
        {
            get
            {
                return this.ListUrlField;
            }
            set
            {
                this.ListUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentFolder
        {
            get
            {
                return this.ParentFolderField;
            }
            set
            {
                this.ParentFolderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Presenters
        {
            get
            {
                return this.PresentersField;
            }
            set
            {
                this.PresentersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Sessions
        {
            get
            {
                return this.SessionsField;
            }
            set
            {
                this.SessionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettingsUrl
        {
            get
            {
                return this.SettingsUrlField;
            }
            set
            {
                this.SettingsUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoPodcastITunesUrl
        {
            get
            {
                return this.VideoPodcastITunesUrlField;
            }
            set
            {
                this.VideoPodcastITunesUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoRssUrl
        {
            get
            {
                return this.VideoRssUrlField;
            }
            set
            {
                this.VideoRssUrlField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V42.Soa" +
        "p")]
    public partial class Session : object
    {
        
        private System.Guid CreatorIdField;
        
        private string DescriptionField;
        
        private System.Nullable<double> DurationField;
        
        private string EditorUrlField;
        
        private string ExternalIdField;
        
        private System.Guid FolderIdField;
        
        private string FolderNameField;
        
        private System.Guid IdField;
        
        private string IosVideoUrlField;
        
        private bool IsBroadcastField;
        
        private bool IsDownloadableField;
        
        private string MP3UrlField;
        
        private string MP4UrlField;
        
        private string NameField;
        
        private string NotesURLField;
        
        private string OutputsPageUrlField;
        
        private System.Guid[] RemoteRecorderIdsField;
        
        private string SharePageUrlField;
        
        private System.Nullable<System.DateTime> StartTimeField;
        
        private SessionManagement.SessionState StateField;
        
        private string StatusMessageField;
        
        private string ThumbUrlField;
        
        private string ViewerUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatorId
        {
            get
            {
                return this.CreatorIdField;
            }
            set
            {
                this.CreatorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditorUrl
        {
            get
            {
                return this.EditorUrlField;
            }
            set
            {
                this.EditorUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId
        {
            get
            {
                return this.ExternalIdField;
            }
            set
            {
                this.ExternalIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FolderId
        {
            get
            {
                return this.FolderIdField;
            }
            set
            {
                this.FolderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FolderName
        {
            get
            {
                return this.FolderNameField;
            }
            set
            {
                this.FolderNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IosVideoUrl
        {
            get
            {
                return this.IosVideoUrlField;
            }
            set
            {
                this.IosVideoUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBroadcast
        {
            get
            {
                return this.IsBroadcastField;
            }
            set
            {
                this.IsBroadcastField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDownloadable
        {
            get
            {
                return this.IsDownloadableField;
            }
            set
            {
                this.IsDownloadableField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MP3Url
        {
            get
            {
                return this.MP3UrlField;
            }
            set
            {
                this.MP3UrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MP4Url
        {
            get
            {
                return this.MP4UrlField;
            }
            set
            {
                this.MP4UrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotesURL
        {
            get
            {
                return this.NotesURLField;
            }
            set
            {
                this.NotesURLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputsPageUrl
        {
            get
            {
                return this.OutputsPageUrlField;
            }
            set
            {
                this.OutputsPageUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] RemoteRecorderIds
        {
            get
            {
                return this.RemoteRecorderIdsField;
            }
            set
            {
                this.RemoteRecorderIdsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SharePageUrl
        {
            get
            {
                return this.SharePageUrlField;
            }
            set
            {
                this.SharePageUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.SessionState State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage
        {
            get
            {
                return this.StatusMessageField;
            }
            set
            {
                this.StatusMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl
        {
            get
            {
                return this.ThumbUrlField;
            }
            set
            {
                this.ThumbUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewerUrl
        {
            get
            {
                return this.ViewerUrlField;
            }
            set
            {
                this.ViewerUrlField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionState", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public enum SessionState : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scheduled = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recording = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Broadcasting = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListSessionsRequest", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class ListSessionsRequest : object
    {
        
        private System.Nullable<System.DateTime> EndDateField;
        
        private System.Nullable<System.Guid> FolderIdField;
        
        private SessionManagement.Pagination PaginationField;
        
        private System.Nullable<System.Guid> RemoteRecorderIdField;
        
        private SessionManagement.SessionSortField SortByField;
        
        private bool SortIncreasingField;
        
        private System.Nullable<System.DateTime> StartDateField;
        
        private SessionManagement.SessionState[] StatesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                this.EndDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> FolderId
        {
            get
            {
                return this.FolderIdField;
            }
            set
            {
                this.FolderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.Pagination Pagination
        {
            get
            {
                return this.PaginationField;
            }
            set
            {
                this.PaginationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> RemoteRecorderId
        {
            get
            {
                return this.RemoteRecorderIdField;
            }
            set
            {
                this.RemoteRecorderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.SessionSortField SortBy
        {
            get
            {
                return this.SortByField;
            }
            set
            {
                this.SortByField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SortIncreasing
        {
            get
            {
                return this.SortIncreasingField;
            }
            set
            {
                this.SortIncreasingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.SessionState[] States
        {
            get
            {
                return this.StatesField;
            }
            set
            {
                this.StatesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pagination", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class Pagination : object
    {
        
        private int MaxNumberResultsField;
        
        private int PageNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxNumberResults
        {
            get
            {
                return this.MaxNumberResultsField;
            }
            set
            {
                this.MaxNumberResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNumber
        {
            get
            {
                return this.PageNumberField;
            }
            set
            {
                this.PageNumberField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionSortField", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public enum SessionSortField : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Duration = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relevance = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Order = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListSessionsResponse", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V42.Soa" +
        "p")]
    public partial class ListSessionsResponse : object
    {
        
        private SessionManagement.Session[] ResultsField;
        
        private int TotalNumberResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.Session[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNumberResults
        {
            get
            {
                return this.TotalNumberResultsField;
            }
            set
            {
                this.TotalNumberResultsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListFoldersRequest", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class ListFoldersRequest : object
    {
        
        private SessionManagement.Pagination PaginationField;
        
        private System.Nullable<System.Guid> ParentFolderIdField;
        
        private bool PublicOnlyField;
        
        private SessionManagement.FolderSortField SortByField;
        
        private bool SortIncreasingField;
        
        private bool WildcardSearchNameOnlyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.Pagination Pagination
        {
            get
            {
                return this.PaginationField;
            }
            set
            {
                this.PaginationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentFolderId
        {
            get
            {
                return this.ParentFolderIdField;
            }
            set
            {
                this.ParentFolderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PublicOnly
        {
            get
            {
                return this.PublicOnlyField;
            }
            set
            {
                this.PublicOnlyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.FolderSortField SortBy
        {
            get
            {
                return this.SortByField;
            }
            set
            {
                this.SortByField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SortIncreasing
        {
            get
            {
                return this.SortIncreasingField;
            }
            set
            {
                this.SortIncreasingField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WildcardSearchNameOnly
        {
            get
            {
                return this.WildcardSearchNameOnlyField;
            }
            set
            {
                this.WildcardSearchNameOnlyField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderSortField", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public enum FolderSortField : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sessions = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relavance = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListFoldersResponse", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V42.Soa" +
        "p")]
    public partial class ListFoldersResponse : object
    {
        
        private SessionManagement.Folder[] ResultsField;
        
        private int TotalNumberResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.Folder[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNumberResults
        {
            get
            {
                return this.TotalNumberResultsField;
            }
            set
            {
                this.TotalNumberResultsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecorderDownloadUrlResponse", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class RecorderDownloadUrlResponse : object
    {
        
        private string MacRecorderDownloadUrlField;
        
        private string WindowsRecorderDownloadUrlField;
        
        private string WindowsRemoteRecorderDownloadUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MacRecorderDownloadUrl
        {
            get
            {
                return this.MacRecorderDownloadUrlField;
            }
            set
            {
                this.MacRecorderDownloadUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowsRecorderDownloadUrl
        {
            get
            {
                return this.WindowsRecorderDownloadUrlField;
            }
            set
            {
                this.WindowsRecorderDownloadUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindowsRemoteRecorderDownloadUrl
        {
            get
            {
                return this.WindowsRemoteRecorderDownloadUrlField;
            }
            set
            {
                this.WindowsRemoteRecorderDownloadUrlField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class Note : object
    {
        
        private string ChannelField;
        
        private System.Guid CreatorIdField;
        
        private System.Guid IDField;
        
        private System.Guid SessionIDField;
        
        private string TextField;
        
        private double TimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel
        {
            get
            {
                return this.ChannelField;
            }
            set
            {
                this.ChannelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatorId
        {
            get
            {
                return this.CreatorIdField;
            }
            set
            {
                this.CreatorIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionID
        {
            get
            {
                return this.SessionIDField;
            }
            set
            {
                this.SessionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Timestamp
        {
            get
            {
                return this.TimestampField;
            }
            set
            {
                this.TimestampField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListNotesResponse", Namespace="http://schemas.datacontract.org/2004/07/Panopto.Server.Services.PublicAPI.V40")]
    public partial class ListNotesResponse : object
    {
        
        private SessionManagement.Note[] ResultsField;
        
        private int TotalNumberResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SessionManagement.Note[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNumberResults
        {
            get
            {
                return this.TotalNumberResultsField;
            }
            set
            {
                this.TotalNumberResultsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionManagement.ISessionManagement")]
    public interface ISessionManagement
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/AddFolder", ReplyAction="http://tempuri.org/ISessionManagement/AddFolderResponse")]
        System.Threading.Tasks.Task<SessionManagement.Folder> AddFolderAsync(SessionManagement.AuthenticationInfo auth, string name, System.Nullable<System.Guid> parentFolder, bool isPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/AddSession", ReplyAction="http://tempuri.org/ISessionManagement/AddSessionResponse")]
        System.Threading.Tasks.Task<SessionManagement.Session> AddSessionAsync(SessionManagement.AuthenticationInfo auth, string name, System.Guid folderId, bool isBroadcast);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetFoldersById", ReplyAction="http://tempuri.org/ISessionManagement/GetFoldersByIdResponse")]
        System.Threading.Tasks.Task<SessionManagement.Folder[]> GetFoldersByIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] folderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetFoldersByExternalId", ReplyAction="http://tempuri.org/ISessionManagement/GetFoldersByExternalIdResponse")]
        System.Threading.Tasks.Task<SessionManagement.Folder[]> GetFoldersByExternalIdAsync(SessionManagement.AuthenticationInfo auth, string[] folderExternalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetAllFoldersByExternalId", ReplyAction="http://tempuri.org/ISessionManagement/GetAllFoldersByExternalIdResponse")]
        System.Threading.Tasks.Task<SessionManagement.Folder[]> GetAllFoldersByExternalIdAsync(SessionManagement.AuthenticationInfo auth, string[] folderExternalIds, string[] providerNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetSessionsById", ReplyAction="http://tempuri.org/ISessionManagement/GetSessionsByIdResponse")]
        System.Threading.Tasks.Task<SessionManagement.Session[]> GetSessionsByIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetSessionsByExternalId", ReplyAction="http://tempuri.org/ISessionManagement/GetSessionsByExternalIdResponse")]
        System.Threading.Tasks.Task<SessionManagement.Session[]> GetSessionsByExternalIdAsync(SessionManagement.AuthenticationInfo auth, string[] sessionExternalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetSessionsList", ReplyAction="http://tempuri.org/ISessionManagement/GetSessionsListResponse")]
        System.Threading.Tasks.Task<SessionManagement.ListSessionsResponse> GetSessionsListAsync(SessionManagement.AuthenticationInfo auth, SessionManagement.ListSessionsRequest request, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetFoldersList", ReplyAction="http://tempuri.org/ISessionManagement/GetFoldersListResponse")]
        System.Threading.Tasks.Task<SessionManagement.ListFoldersResponse> GetFoldersListAsync(SessionManagement.AuthenticationInfo auth, SessionManagement.ListFoldersRequest request, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateSessionName", ReplyAction="http://tempuri.org/ISessionManagement/UpdateSessionNameResponse")]
        System.Threading.Tasks.Task UpdateSessionNameAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateSessionDescription", ReplyAction="http://tempuri.org/ISessionManagement/UpdateSessionDescriptionResponse")]
        System.Threading.Tasks.Task UpdateSessionDescriptionAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateSessionIsBroadcast", ReplyAction="http://tempuri.org/ISessionManagement/UpdateSessionIsBroadcastResponse")]
        System.Threading.Tasks.Task UpdateSessionIsBroadcastAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, bool isBroadcast);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateSessionOwner", ReplyAction="http://tempuri.org/ISessionManagement/UpdateSessionOwnerResponse")]
        System.Threading.Tasks.Task UpdateSessionOwnerAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds, string newOwnerUserKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/MoveSessions", ReplyAction="http://tempuri.org/ISessionManagement/MoveSessionsResponse")]
        System.Threading.Tasks.Task MoveSessionsAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds, System.Guid folderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateSessionExternalId", ReplyAction="http://tempuri.org/ISessionManagement/UpdateSessionExternalIdResponse")]
        System.Threading.Tasks.Task UpdateSessionExternalIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderName", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderNameResponse")]
        System.Threading.Tasks.Task UpdateFolderNameAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderDescription", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderDescriptionResponse")]
        System.Threading.Tasks.Task UpdateFolderDescriptionAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderEnablePodcast", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderEnablePodcastResponse")]
        System.Threading.Tasks.Task UpdateFolderEnablePodcastAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, bool enablePodcast);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderAllowPublicNotes", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderAllowPublicNotesResponse")]
        System.Threading.Tasks.Task UpdateFolderAllowPublicNotesAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, bool allowPublicNotes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderAllowSessionDownload", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderAllowSessionDownloadResponse")]
        System.Threading.Tasks.Task UpdateFolderAllowSessionDownloadAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, bool allowSessionDownload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderParent", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderParentResponse")]
        System.Threading.Tasks.Task UpdateFolderParentAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, System.Nullable<System.Guid> parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UpdateFolderExternalId", ReplyAction="http://tempuri.org/ISessionManagement/UpdateFolderExternalIdResponse")]
        System.Threading.Tasks.Task UpdateFolderExternalIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/DeleteSessions", ReplyAction="http://tempuri.org/ISessionManagement/DeleteSessionsResponse")]
        System.Threading.Tasks.Task DeleteSessionsAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/DeleteFolders", ReplyAction="http://tempuri.org/ISessionManagement/DeleteFoldersResponse")]
        System.Threading.Tasks.Task DeleteFoldersAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] folderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/ProvisionExternalCourse", ReplyAction="http://tempuri.org/ISessionManagement/ProvisionExternalCourseResponse")]
        System.Threading.Tasks.Task<SessionManagement.Folder> ProvisionExternalCourseAsync(SessionManagement.AuthenticationInfo auth, string name, string externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/SetExternalCourseAccess", ReplyAction="http://tempuri.org/ISessionManagement/SetExternalCourseAccessResponse")]
        System.Threading.Tasks.Task<SessionManagement.Folder[]> SetExternalCourseAccessAsync(SessionManagement.AuthenticationInfo auth, string name, string externalId, System.Guid[] folderIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetRecorderDownloadUrls", ReplyAction="http://tempuri.org/ISessionManagement/GetRecorderDownloadUrlsResponse")]
        System.Threading.Tasks.Task<SessionManagement.RecorderDownloadUrlResponse> GetRecorderDownloadUrlsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/CreateNoteByRelativeTime", ReplyAction="http://tempuri.org/ISessionManagement/CreateNoteByRelativeTimeResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateNoteByRelativeTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, string channel, double timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/CreateNoteByAbsoluteTime", ReplyAction="http://tempuri.org/ISessionManagement/CreateNoteByAbsoluteTimeResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateNoteByAbsoluteTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, string channel, System.DateTime timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/EditNote", ReplyAction="http://tempuri.org/ISessionManagement/EditNoteResponse")]
        System.Threading.Tasks.Task EditNoteAsync(SessionManagement.AuthenticationInfo auth, System.Guid noteId, System.Guid sessionId, string newText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/DeleteNote", ReplyAction="http://tempuri.org/ISessionManagement/DeleteNoteResponse")]
        System.Threading.Tasks.Task DeleteNoteAsync(SessionManagement.AuthenticationInfo auth, System.Guid noteId, System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/GetNote", ReplyAction="http://tempuri.org/ISessionManagement/GetNoteResponse")]
        System.Threading.Tasks.Task<SessionManagement.Note> GetNoteAsync(SessionManagement.AuthenticationInfo auth, System.Guid noteId, System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/ListNotes", ReplyAction="http://tempuri.org/ISessionManagement/ListNotesResponse")]
        System.Threading.Tasks.Task<SessionManagement.ListNotesResponse> ListNotesAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, SessionManagement.Pagination pagination, System.Nullable<System.Guid> creatorId, string channel, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/AreUsersNotesPublic", ReplyAction="http://tempuri.org/ISessionManagement/AreUsersNotesPublicResponse")]
        System.Threading.Tasks.Task<bool> AreUsersNotesPublicAsync(SessionManagement.AuthenticationInfo auth, System.Guid userId, System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/SetNotesPublic", ReplyAction="http://tempuri.org/ISessionManagement/SetNotesPublicResponse")]
        System.Threading.Tasks.Task SetNotesPublicAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, bool areNotesPublic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/IsDropbox", ReplyAction="http://tempuri.org/ISessionManagement/IsDropboxResponse")]
        System.Threading.Tasks.Task<bool> IsDropboxAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/CreateCaptionByRelativeTime", ReplyAction="http://tempuri.org/ISessionManagement/CreateCaptionByRelativeTimeResponse")]
        System.Threading.Tasks.Task CreateCaptionByRelativeTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, double timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/CreateCaptionByAbsoluteTime", ReplyAction="http://tempuri.org/ISessionManagement/CreateCaptionByAbsoluteTimeResponse")]
        System.Threading.Tasks.Task CreateCaptionByAbsoluteTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, System.DateTime timestamp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionManagement/UploadTranscript", ReplyAction="http://tempuri.org/ISessionManagement/UploadTranscriptResponse")]
        System.Threading.Tasks.Task UploadTranscriptAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string file);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface ISessionManagementChannel : SessionManagement.ISessionManagement, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class SessionManagementClient : System.ServiceModel.ClientBase<SessionManagement.ISessionManagement>, SessionManagement.ISessionManagement
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SessionManagementClient() : 
                base(SessionManagementClient.GetDefaultBinding(), SessionManagementClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISessionManagement.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagementClient(EndpointConfiguration endpointConfiguration) : 
                base(SessionManagementClient.GetBindingForEndpoint(endpointConfiguration), SessionManagementClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagementClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SessionManagementClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagementClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SessionManagementClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SessionManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Folder> AddFolderAsync(SessionManagement.AuthenticationInfo auth, string name, System.Nullable<System.Guid> parentFolder, bool isPublic)
        {
            return base.Channel.AddFolderAsync(auth, name, parentFolder, isPublic);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Session> AddSessionAsync(SessionManagement.AuthenticationInfo auth, string name, System.Guid folderId, bool isBroadcast)
        {
            return base.Channel.AddSessionAsync(auth, name, folderId, isBroadcast);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Folder[]> GetFoldersByIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] folderIds)
        {
            return base.Channel.GetFoldersByIdAsync(auth, folderIds);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Folder[]> GetFoldersByExternalIdAsync(SessionManagement.AuthenticationInfo auth, string[] folderExternalIds)
        {
            return base.Channel.GetFoldersByExternalIdAsync(auth, folderExternalIds);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Folder[]> GetAllFoldersByExternalIdAsync(SessionManagement.AuthenticationInfo auth, string[] folderExternalIds, string[] providerNames)
        {
            return base.Channel.GetAllFoldersByExternalIdAsync(auth, folderExternalIds, providerNames);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Session[]> GetSessionsByIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds)
        {
            return base.Channel.GetSessionsByIdAsync(auth, sessionIds);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Session[]> GetSessionsByExternalIdAsync(SessionManagement.AuthenticationInfo auth, string[] sessionExternalIds)
        {
            return base.Channel.GetSessionsByExternalIdAsync(auth, sessionExternalIds);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.ListSessionsResponse> GetSessionsListAsync(SessionManagement.AuthenticationInfo auth, SessionManagement.ListSessionsRequest request, string searchQuery)
        {
            return base.Channel.GetSessionsListAsync(auth, request, searchQuery);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.ListFoldersResponse> GetFoldersListAsync(SessionManagement.AuthenticationInfo auth, SessionManagement.ListFoldersRequest request, string searchQuery)
        {
            return base.Channel.GetFoldersListAsync(auth, request, searchQuery);
        }
        
        public System.Threading.Tasks.Task UpdateSessionNameAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string name)
        {
            return base.Channel.UpdateSessionNameAsync(auth, sessionId, name);
        }
        
        public System.Threading.Tasks.Task UpdateSessionDescriptionAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string description)
        {
            return base.Channel.UpdateSessionDescriptionAsync(auth, sessionId, description);
        }
        
        public System.Threading.Tasks.Task UpdateSessionIsBroadcastAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, bool isBroadcast)
        {
            return base.Channel.UpdateSessionIsBroadcastAsync(auth, sessionId, isBroadcast);
        }
        
        public System.Threading.Tasks.Task UpdateSessionOwnerAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds, string newOwnerUserKey)
        {
            return base.Channel.UpdateSessionOwnerAsync(auth, sessionIds, newOwnerUserKey);
        }
        
        public System.Threading.Tasks.Task MoveSessionsAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds, System.Guid folderId)
        {
            return base.Channel.MoveSessionsAsync(auth, sessionIds, folderId);
        }
        
        public System.Threading.Tasks.Task UpdateSessionExternalIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string externalId)
        {
            return base.Channel.UpdateSessionExternalIdAsync(auth, sessionId, externalId);
        }
        
        public System.Threading.Tasks.Task UpdateFolderNameAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, string name)
        {
            return base.Channel.UpdateFolderNameAsync(auth, folderId, name);
        }
        
        public System.Threading.Tasks.Task UpdateFolderDescriptionAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, string description)
        {
            return base.Channel.UpdateFolderDescriptionAsync(auth, folderId, description);
        }
        
        public System.Threading.Tasks.Task UpdateFolderEnablePodcastAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, bool enablePodcast)
        {
            return base.Channel.UpdateFolderEnablePodcastAsync(auth, folderId, enablePodcast);
        }
        
        public System.Threading.Tasks.Task UpdateFolderAllowPublicNotesAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, bool allowPublicNotes)
        {
            return base.Channel.UpdateFolderAllowPublicNotesAsync(auth, folderId, allowPublicNotes);
        }
        
        public System.Threading.Tasks.Task UpdateFolderAllowSessionDownloadAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, bool allowSessionDownload)
        {
            return base.Channel.UpdateFolderAllowSessionDownloadAsync(auth, folderId, allowSessionDownload);
        }
        
        public System.Threading.Tasks.Task UpdateFolderParentAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, System.Nullable<System.Guid> parentId)
        {
            return base.Channel.UpdateFolderParentAsync(auth, folderId, parentId);
        }
        
        public System.Threading.Tasks.Task UpdateFolderExternalIdAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId, string externalId)
        {
            return base.Channel.UpdateFolderExternalIdAsync(auth, folderId, externalId);
        }
        
        public System.Threading.Tasks.Task DeleteSessionsAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] sessionIds)
        {
            return base.Channel.DeleteSessionsAsync(auth, sessionIds);
        }
        
        public System.Threading.Tasks.Task DeleteFoldersAsync(SessionManagement.AuthenticationInfo auth, System.Guid[] folderIds)
        {
            return base.Channel.DeleteFoldersAsync(auth, folderIds);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Folder> ProvisionExternalCourseAsync(SessionManagement.AuthenticationInfo auth, string name, string externalId)
        {
            return base.Channel.ProvisionExternalCourseAsync(auth, name, externalId);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Folder[]> SetExternalCourseAccessAsync(SessionManagement.AuthenticationInfo auth, string name, string externalId, System.Guid[] folderIds)
        {
            return base.Channel.SetExternalCourseAccessAsync(auth, name, externalId, folderIds);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.RecorderDownloadUrlResponse> GetRecorderDownloadUrlsAsync()
        {
            return base.Channel.GetRecorderDownloadUrlsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateNoteByRelativeTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, string channel, double timestamp)
        {
            return base.Channel.CreateNoteByRelativeTimeAsync(auth, sessionId, text, channel, timestamp);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateNoteByAbsoluteTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, string channel, System.DateTime timestamp)
        {
            return base.Channel.CreateNoteByAbsoluteTimeAsync(auth, sessionId, text, channel, timestamp);
        }
        
        public System.Threading.Tasks.Task EditNoteAsync(SessionManagement.AuthenticationInfo auth, System.Guid noteId, System.Guid sessionId, string newText)
        {
            return base.Channel.EditNoteAsync(auth, noteId, sessionId, newText);
        }
        
        public System.Threading.Tasks.Task DeleteNoteAsync(SessionManagement.AuthenticationInfo auth, System.Guid noteId, System.Guid sessionId)
        {
            return base.Channel.DeleteNoteAsync(auth, noteId, sessionId);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.Note> GetNoteAsync(SessionManagement.AuthenticationInfo auth, System.Guid noteId, System.Guid sessionId)
        {
            return base.Channel.GetNoteAsync(auth, noteId, sessionId);
        }
        
        public System.Threading.Tasks.Task<SessionManagement.ListNotesResponse> ListNotesAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, SessionManagement.Pagination pagination, System.Nullable<System.Guid> creatorId, string channel, string searchQuery)
        {
            return base.Channel.ListNotesAsync(auth, sessionId, pagination, creatorId, channel, searchQuery);
        }
        
        public System.Threading.Tasks.Task<bool> AreUsersNotesPublicAsync(SessionManagement.AuthenticationInfo auth, System.Guid userId, System.Guid sessionId)
        {
            return base.Channel.AreUsersNotesPublicAsync(auth, userId, sessionId);
        }
        
        public System.Threading.Tasks.Task SetNotesPublicAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, bool areNotesPublic)
        {
            return base.Channel.SetNotesPublicAsync(auth, sessionId, areNotesPublic);
        }
        
        public System.Threading.Tasks.Task<bool> IsDropboxAsync(SessionManagement.AuthenticationInfo auth, System.Guid folderId)
        {
            return base.Channel.IsDropboxAsync(auth, folderId);
        }
        
        public System.Threading.Tasks.Task CreateCaptionByRelativeTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, double timestamp)
        {
            return base.Channel.CreateCaptionByRelativeTimeAsync(auth, sessionId, text, timestamp);
        }
        
        public System.Threading.Tasks.Task CreateCaptionByAbsoluteTimeAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string text, System.DateTime timestamp)
        {
            return base.Channel.CreateCaptionByAbsoluteTimeAsync(auth, sessionId, text, timestamp);
        }
        
        public System.Threading.Tasks.Task UploadTranscriptAsync(SessionManagement.AuthenticationInfo auth, System.Guid sessionId, string file)
        {
            return base.Channel.UploadTranscriptAsync(auth, sessionId, file);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISessionManagement))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISessionManagement))
            {
                return new System.ServiceModel.EndpointAddress("http://pitt.hosted.panopto.com/Panopto/PublicAPI/4.2/SessionManagement.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SessionManagementClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISessionManagement);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SessionManagementClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISessionManagement);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISessionManagement,
        }
    }
}
